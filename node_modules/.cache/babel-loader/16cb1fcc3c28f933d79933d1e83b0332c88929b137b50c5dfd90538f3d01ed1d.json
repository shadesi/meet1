{"ast":null,"code":"var _jsxFileName = \"/Users/shanedesilva/Downloads/meet-ex-4.10 4/src/components/EventGenresChart.js\";\n// src/components/EventGenresChart.js\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventGenresChart = ({\n  events\n}) => {\n  // Extract genres dynamically\n  const getData = () => {\n    const genresSet = new Set();\n\n    // Collect genres from event summaries\n    events.forEach(event => {\n      if (event.summary) {\n        const words = event.summary.split(' ');\n        words.forEach(word => genresSet.add(word));\n      }\n    });\n\n    // Create data array from the genres\n    const genreData = Array.from(genresSet).map(genre => ({\n      name: genre,\n      value: events.filter(event => event.summary.includes(genre)).length\n    }));\n    return genreData;\n  };\n  const data = getData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Event Genres Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 400,\n      children: data.length > 0 ? /*#__PURE__*/_jsxDEV(BarChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"value\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No genres available for the selected events.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) // Placeholder for no data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = EventGenresChart;\nexport default EventGenresChart;\nvar _c;\n$RefreshReg$(_c, \"EventGenresChart\");","map":{"version":3,"names":["React","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","EventGenresChart","events","getData","genresSet","Set","forEach","event","summary","words","split","word","add","genreData","Array","from","map","genre","name","value","filter","includes","length","data","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["/Users/shanedesilva/Downloads/meet-ex-4.10 4/src/components/EventGenresChart.js"],"sourcesContent":["// src/components/EventGenresChart.js\n\nimport React from 'react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst EventGenresChart = ({ events }) => {\n  // Extract genres dynamically\n  const getData = () => {\n    const genresSet = new Set();\n\n    // Collect genres from event summaries\n    events.forEach(event => {\n      if (event.summary) {\n        const words = event.summary.split(' ');\n        words.forEach(word => genresSet.add(word));\n      }\n    });\n\n    // Create data array from the genres\n    const genreData = Array.from(genresSet).map((genre) => ({\n      name: genre,\n      value: events.filter((event) => event.summary.includes(genre)).length,\n    }));\n\n    return genreData;\n  };\n\n  const data = getData();\n\n  return (\n    <div>\n      <h2>Event Genres Distribution</h2>\n      <ResponsiveContainer width=\"100%\" height={400}>\n        {data.length > 0 ? (\n          <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            <Tooltip />\n            <Bar dataKey=\"value\" fill=\"#8884d8\" />\n          </BarChart>\n        ) : (\n          <p>No genres available for the selected events.</p> // Placeholder for no data\n        )}\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default EventGenresChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}